spring.application.name=mulang

#JSP: prefix + suffix
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#Local Mariadb
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}?characterEncoding=UTF-8&connectionCollation=utf8mb4_general_ci
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#JPA DDL on/off
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

#local storage setting
file.dir=C:/YJS/mulang-springboot/upload/
spring.servlet.multipart.enabled=true
spring.servlet.multipart.resolve-lazily=false
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=250MB

# AWS S3 setting
aws.access-key=${AWS_ACCESS_KEY}
aws.secret-key=${AWS_SECRET_KEY}
aws.s3.bucket=${AWS_BUCKET}
aws.region=ap-northeast-2

#mail server
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USER}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
spring.mail.properties.mail.debug=true
spring.mail.default-encoding=UTF-8

#Google client
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

#Toss Payments
toss.payments.client-key=${TOSS_CLIENT_KEY}
toss.payments.secret-key=${TOSS_SECRET_KEY}

#Logging
logging.level.yoonsome.mulang=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE